#!/usr/bin/python3

from decimal import Decimal
import getopt
import sys
import psycopg2

opts, args = getopt.getopt(sys.argv[1:], "ln")
noop = False

logtable = "log"

for o, a in opts:
    if o == '-l':
        logtable = "livelog"
    elif o == '-n':
        noop = True
    else:
        assert False, "Unknown option %s" % (o)

if not noop:
    conn = psycopg2.connect("service=cb")
    cur = conn.cursor()

    # empty livelog since we are loading the real log now
    cur.execute("delete from livelog")

#40CW  14-Apr-19 08:11 0002  LY3B           599  599  29            LY   29  0   7029.1

log = []
laststart = ''
with open(args[1]) as f:
  for line in f:

    # ; comment, append to last qso
    if line[0] == ';':
        if line[2:6] == 'via ':
            log[-1]['qsl_via'] = line[6:].rstrip().upper()
        else:
            log[-1]['comment'] = line[2:].rstrip()
        continue

    if line[23] != '0':
        Exception('serial does not start with 0')

    qso = { 'mycall': 'DF7CB',
            'mytrx': 'IC7610',
            #'mytrx': 'IC706',
            'mypwr': 100,
            'myant': 'FD4' }
    qso['mode'] = line[3:6].rstrip()
    qso['start'] = line[7:22] # date+time
    if laststart == qso['start']: # 2nd QSO in this minute
        qso['start'] += ':30'
    elif laststart == qso['start'] + ':30': # 3rd QSO in this minute
        qso['start'] += ':45'
    laststart = qso['start']
    qso['call'] = line[29:43].rstrip()
    qso['qrg'] = Decimal(line[79:87]) / 1000
    #qso['qrg'] = 7

    rsttx = line[44:47].rstrip()
    serial = line[24:27]
    rstrx = line[49:52].rstrip()
    exchange = line[54:67].strip()

    # my rst:
    qso['rsttx'] = rsttx + serial       # my rst + serial (3 digits)
    #qso['rsttx'] = rsttx + '14'        # my rst + my WAZ/CQ zone
    #qso['rsttx'] = rsttx + '28'        # my rst + my ITU zone
    #qso['rsttx'] = rsttx + 'R10'       # my rst + my DOK
    #qso['rsttx'] = rsttx + 'JO31'
    #qso['rsttx'] = rsttx + ' CHRIS'

    # their rst:
    qso['rstrx'] = rstrx + exchange     # their rst + serial
    #qso['rstrx'] = rstrx +'/'+exchange # their rst / serial
    #qso['rstrx'] = exchange

    # extract DOK if it's not a serial:
    #try:
    #    rst = int(exchange)
    #except:
    #    qso['dok'] = exchange

    #qso['loc'] = exchange

    qso['contest'] = args[0] # contest name

    log.append(qso)

for qso in log:
    print (qso)

    if not noop:
        insert = "INSERT INTO " + logtable + " (" + \
            ', '.join(qso.keys()) + \
            ') VALUES (' + \
            ', '.join(['%s' for x in qso]) + \
            ')'
        args = [x for x in qso.values()]
        cur.execute(insert, args)

if not noop:
    conn.commit()
