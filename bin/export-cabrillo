#!/usr/bin/python3

# usage: export-cabrillo <contest name> [<filename>]

import psycopg2
import psycopg2.extras
import sys

conn = psycopg2.connect("service=cb")
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

contest = sys.argv[1]
age = '7 days'

cur.execute("""select
    to_char(min(start::date), 'YYYY-MM-DD') iso_date,
    array_agg(distinct upper(qrg::band::text)) band,
    array_agg(distinct mode) mode,

    max(mycall::text) mycall,
    max(myloc) myloc,
    max(mypwr) mypwr
    from log
    where start > now() - %s::interval
    and contest = %s
    """,
    (age, contest))

info = cur.fetchall()[0]

cur.execute(r"""select
    round(qrg * 1000.0)::text qrg,
    to_char(start, 'YYYY-MM-DD') as date,
    to_char(start, 'hh24mi') as time,
    call as call,
    case
      when mode in ('CW', 'FM') then mode
      when mode in ('RTTY') then 'RY'
      when mode in ('SSB') then 'PH'
      when mode ~ 'PSK' then 'PS'
      else 'DG'
    end as mode,
    concat_ws(' ',
      regexp_replace(rsttx, '^(5[1-9]9?)(..)', '\1 \2'),
      extx) as rst_sent,
    concat_ws(' ',
      regexp_replace(rstrx, '^(5[1-9]9?)(..)', '\1 \2'),
      exrx) as rst_rcvd
    from log
    where start > now() - %s::interval
    and contest = %s
    order by start, call""",
    (age, contest))

records = cur.fetchall()
if len(records) == 0:
    print("No QSOs found")
    exit(1)

# write output

if len(sys.argv) > 2:
    filename = sys.argv[2]
else:
    filename = f"{info['iso_date']}-{contest.lower().translate({32: 95})}.cbr"
print(f"Writing {filename}")
f = open(filename, 'w')

if info['mypwr'] is not None and info['mypwr'] <= 10:
    mypwr = 'QRP'
elif info['mypwr'] is None or info['mypwr'] <= 100:
    mypwr = 'LOW'
else:
    mypwr = 'HIGH'

f.write(f"""START-OF-LOG: 3.0
CALLSIGN: {info['mycall']}
NAME: Christoph Berg
EMAIL: cb@df7cb.de
ADDRESS: Rather Str. 76a
ADDRESS: 47802 Krefeld
ADDRESS: Germany
GRID-LOCATOR: {info['myloc']}
LOCATION: DX
CLUB: Rhein Ruhr DX Association
CONTEST: {contest}
CATEGORY-ASSISTED: ASSISTED
CATEGORY-BAND: {info['band'][0] if len(info['band']) == 1 else 'ALL'}
CATEGORY-MODE: {info['mode'][0] if len(info['mode']) == 1 else 'MIXED'}
CATEGORY-OPERATOR: SINGLE-OP
CATEGORY-POWER: {mypwr}
CATEGORY-STATION: FIXED
CATEGORY-TRANSMITTER: ONE
""")

# QSO: 7036 CW 2022-06-27 1639 DF7CB 599 001 SD6M 599 014 0

call_len = 0
rst_rcvd_len = 0

for qso in records:
    if len(qso['call']) > call_len:
        call_len = len(qso['call'])
    if len(qso['rst_rcvd']) > rst_rcvd_len:
        rst_rcvd_len = len(qso['rst_rcvd'])

for qso in records:
    f.write('QSO: ' + ' '.join([
        qso['qrg'].ljust(5),
        qso['mode'],
        qso['date'],
        qso['time'],
        info['mycall'],
        qso['rst_sent'],
        qso['call'].ljust(call_len),
        qso['rst_rcvd'].ljust(rst_rcvd_len),
        '0', # transmitter number
        ]) + '\n')

f.write(f"""END-OF-LOG:\n""")
