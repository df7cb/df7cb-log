#!/usr/bin/python3

import os
import adif_export
import psycopg2
import psycopg2.extras
import sys

adiffile = sys.argv[1]
if len(sys.argv) > 2:
    since = sys.argv[2]
else:
    since = "yesterday"
if len(sys.argv) > 3:
    extra = sys.argv[3]
else:
    #extra = "mycall COLLATE \"C\" LIKE 'DF7CB%%'"
    extra = "true"

conn = psycopg2.connect("service=cb")
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

cur.execute(f"""SELECT
        to_char(start, 'YYYYMMDD') AS "QSO_DATE",
        to_char(start, 'hh24mi') AS "TIME_ON",
        call AS "CALL",
        qrg::text AS "FREQ",
        qrg::band AS "BAND",
        case mode
          when 'FSQ' then 'MFSK'
          when 'FST4' then 'MFSK'
          when 'FT4' then 'MFSK'
          else mode
        end AS "MODE",
        case mode
          when 'FSQ' then 'FSQCALL'
          when 'FST4' then 'FST4'
          when 'FT4' then 'FT4'
          else submode
        end AS "SUBMODE",

        CASE qso_via
          WHEN 'QO100' THEN 'SAT'
        END AS "PROP_MODE",
        CASE qso_via
          WHEN 'QO100' THEN 'QO-100'
        END AS "SAT_NAME",
        CASE qso_via
          WHEN 'QO100' THEN '3cm'
        END AS "BAND_RX",

        regexp_replace(rsttx, '^599(.)', '599 \\1') AS "RST_SENT",
        extx as "STX_STRING",
        regexp_replace(rstrx, '^599(.)', '599 \\1') AS "RST_RCVD",
        exrx as "SRX_STRING",

        coalesce(qsltx, 'N') AS "QSL_SENT",
        case qslrx
          when 'Y' then 'Y' -- TNX
          when 'R' then 'R' -- PSE
          else 'i' -- N means PSE at qslshop.de
        end as "QSL_RCVD",
        loc AS "GRIDSQUARE",
        contest AS "CONTEST_ID",

        mycall AS "STATION_CALLSIGN",
        case mycall when 'DF7CB' then '' else 'DF7CB' end as "OPERATOR",
        mypwr AS "TX_PWR",
        myloc AS "MY_GRIDSQUARE"
        FROM log l
        WHERE coalesce(last_update, start) >= %s
            AND {extra}
        ORDER BY start, call""", [since])

records = cur.fetchall()
adif_export.write(records, adiffile)
